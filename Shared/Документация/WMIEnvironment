Read or List Environment Variables

The following code, created with the help of Scriptomatic, lists all TEMP variables on the local computer:

Set objWMIService = GetObject( "winmgmts://./root/CIMV2" )
strQuery = "SELECT * FROM Win32_Environment WHERE Name='TEMP'"
Set colItems = objWMIService.ExecQuery( strQuery, "WQL", 48 )

For Each objItem In colItems
        WScript.Echo "Caption        : " & objItem.Caption
        WScript.Echo "Description    : " & objItem.Description
        WScript.Echo "Name           : " & objItem.Name
        WScript.Echo "Status         : " & objItem.Status
        WScript.Echo "SystemVariable : " & objItem.SystemVariable
        WScript.Echo "UserName       : " & objItem.UserName
        WScript.Echo "VariableValue  : " & objItem.VariableValue
        WScript.Echo
Next

Set colItems      = Nothing
Set objWMIService = Nothing
Set Environment Variables

To set a variable, specify new values for its Name, UserName and/or VariableValue properties.


The following code, from the book Windows Server Cookbook by Robbie Allen, creates a new system environment variable called FOOBAR:

strVarName = "FOOBAR"
strVarValue = "Foobar Value"

Set objVarClass = GetObject( "winmgmts://./root/cimv2:Win32_Environment" )
Set objVar      = objVarClass.SpawnInstance_
objVar.Name          = strVarName
objVar.VariableValue = strVarValue
objVar.UserName      = "<SYSTEM>"
objVar.Put_
WScript.Echo "Created environment variable " & strVarName
Set objVar      = Nothing
Set objVarClass = Nothing
And the following code removes the environment variable again by giving it an empty value:

strVarName = "FOOBAR"

Set objVarClass = GetObject( "winmgmts://./root/cimv2:Win32_Environment" )
Set objVar      = objVarClass.SpawnInstance_
objVar.Name          = strVarName
objVar.VariableValue = ""
objVar.UserName      = "<SYSTEM>"
objVar.Put_
WScript.Echo "Removed environment variable " & strVarName
Set objVar      = Nothing
Set objVarClass = Nothing
Replace the dot in the GetObject commands by a remote computer name to manage environment variables on that remote computer.


Подключение к службе WMI
Для работы с WMI необходимо в первую очередь подключиться к этой службе. Это можно сделать двумя различными способами.
с использованием объекта SWbemLocator
с помощью WMI-моникера (WMI moniker) "WinMgmts:"
Рассмотрим первый способ:
получаем объект swbemLocator: 
Dim oLocator
Set oLocator = CreateObject("wbemScripting.Swbemlocator")
У объекта SwbemLocator есть один метод - ConnectServer() он вызывается для подключения к службе WMI на локальном или удаленном компьютере. 
strComputer = ".";
UserName = "";
Password = "";
SWBemlocator = new ActiveXObject("WbemScripting.SWbemLocator");
SwbemServices = SWBemlocator.ConnectServer(strComputer,
"root/CIMV2",UserName,Password);



 func CreatePath(APath :String) :AutoObject
Работает аналогично функции GetObject в VBScript. В частности, позволяет
получить доступ к объектам WMI. Например:

var vReg :AutoObject;
vReg = AutoObject.CreatePath("winmgmts:{impersonationLevel=impersonate}!\\.\root\default:StdRegProv");
vReg.GetStringValue(HKEY_CURRENT_USER, "Software\SomeKey", "SomeValue", vVal);

strComputer = "."
Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\cimv2")
"winmgmts:\\.\root\cimv2"
